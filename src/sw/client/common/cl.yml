# SPDX-License-Identifier: GPL-3.0-or-later

settings:
    prefix: cl_
    generate_struct: true
    api_name: SW_CLIENT_COMMON_API

categories:
    build:
        name: Build Options
        description: Controls build process when used in appropriate subcommands.

command_line:
    working_directory:
        option: d
        desc: Working directory
        type: path

    use_lock_file:
        option: l
        desc: Use lock file
        # do not want it as true
        # maybe add settings for it
        #default_value: true
    lock_file:
        option: lf
        desc: Lock file path
        type: path

    # all subcommands
    subcommand:
        name: AllSubCommands

        command_line:
            storage_dir:
                option: storage-dir
                type: path

            curl_verbose:
            ignore_ssl_checks:
            no_network:
                description: Completely prohibit network connections.

            # from libs
            default_remote:
                option: r
                type: String
                description: Select default remote

            do_not_remove_bad_module:
                description: Keep bad compiled config module file

            use_same_config_for_host_dependencies:

            use_saved_configs:
                aliases: usc
                #default_value: true

            #
            save_failed_commands:
                aliases: sfc
                cat: build
            save_all_commands:
                aliases: sac
                cat: build
            save_executed_commands:
                aliases: sec
                cat: build

            # explain
            explain_outdated:
                description: Explain outdated commands
                cat: build
            explain_outdated_full:
                description: Explain outdated commands with more info
                cat: build
            explain_outdated_to_trace:
                description: Explain outdated commands with more info
                cat: build

            save_command_format:
                type: String
                description: Explicitly set saved command format (bat or sh)
                cat: build
            save_command_output:
                description: Save command stdout and stderr
                cat: build

            debug_configs:
                description: Build configs in debug mode
                default: true # true for now
            ignore_outdated_configs:
                description: Do not rebuild configs
                hidden: true

            ignore_source_files_errors:
                description: Useful for debugging

            do_not_mangle_object_names:

            standalone:
                default_value: true
                description: Build standalone binaries
                aliases: sa
                hidden: true

            # checks
            checks_single_thread:
                option: checks-st
                description: Perform checks in one thread (for cc)
            print_checks:
                description: Save extended checks info to file
            wait_for_cc_checks:
                description: Do not exit on missing cc checks, wait for user input
            cc_checks_command:
                type: String
                description: Automatically execute cc checks command


            # build stuff

            #cl::opt<bool> dry_run("n", cl::desc("Dry run"));

            build_always:
                option: B
                desc: Build always
                cat: build
            skip_errors:
                option: k
                type: int
                desc: Skip errors
                cat: build
            time_trace:
                desc: Record chrome time trace events

            show_output:
            write_output_to_file:

            #//static cl::opt<bool> print_graph("print-graph", cl::desc("Print file with build graph"));

            targets_to_build:
                option: target
                type: String
                list: true
                desc: Targets to build
                cat: build
            targets_to_ignore:
                option: exclude-target
                type: String
                list: true
                desc: Targets to ignore
                cat: build

            reproducible_build:
                desc: Perform reproducible build.
                cat: build

            Dvariables:
                option: D
                type: String
                list: true
                desc: Input variables
                prefix: true
                zero_or_more: true
                cat: build

            #////////////////////////////////////////////////////////////////////////////////
            #//
            #// build configs
            #//
            #////////////////////////////////////////////////////////////////////////////////

            #//static cl::opt<bool> append_configs("append-configs", cl::desc("Append configs for generation"));

            os:
                type: String
                list: true
                comma_separated: true
                desc: Set build target os
                cat: build
            compiler:
                type: String
                list: true
                comma_separated: true
                desc: Set compiler
                cat: build
            linker:
                type: String
                list: true
                comma_separated: true
                desc: Set linker. Must match compiler list.
                cat: build
            configuration:
                type: String
                list: true
                comma_separated: true
                desc: |-
                    Set build configuration.
                    Allowed values:
                        - debug, d
                        - release, r
                        - releasewithdebuginformation, releasewithdebinfo, rwdi
                        - minimalsizerelease, minsizerel, msr
                    Default is release.
                    Specify multiple using a comma: "d,r".
                aliases: config
                cat: build
            platform:
                type: String
                list: true
                comma_separated: true
                desc: |
                    Set build platform.
                    Examples: x86, x64, arm, arm64
                aliases: arch
                cat: build

            #// rename to stdc, stdcpp?
            libc:
                type: String
                list: true
                comma_separated: true
                desc: Set build libc
                cat: build
            libcpp:
                type: String
                list: true
                comma_separated: true
                desc: Set build libcpp
                cat: build

            static_dependencies:
                desc: Build static dependencies of inputs
                aliases: static-deps
                cat: build

            build_name:
                type: String
                desc: Set meaningful build name instead of hash
                cat: build
            config_name:
                list: true
                type: String
                desc: Set meaningful config names instead of hash
                comma_separated: true
                cat: build

            #// -setting k1=v1,k2=v2,k3="v3,v3" -setting k4=v4,k5,k6 etc.
            #// settings in one setting applied simultaneosly
            #// settings in different settings are multiplied
            #// k=v assigns value to dot separated key
            #// complex.key.k1 means s["complex"]["key"]["k1"]
            #// k= or k="" means empty value
            #// k means reseted value
            settings:
                type: String
                list: true
                desc: Set settings directly
                zero_or_more: true

            #// toolchain file
            settings_file:
                type: path
                list: true
                desc: Read settings from file
                zero_or_more: true
                cat: build
            settings_file_config:
                type: String
                list: true
                desc: Select settings from file
                zero_or_more: true
                cat: build
            settings_json:
                type: String
                list: true
                desc: Read settings from json string
                zero_or_more: true
                cat: build
            host_settings_file:
                type: path
                desc: Read host settings from file
                cat: build


            #// static/shared
            static_build:
                desc: Set static build
                aliases: static
                cat: build
            shared_build:
                desc: Set shared build (default)
                aliases: shared
                cat: build

            #//mt/md
            win_mt:
                desc: Set /MT or /MTd build
                aliases: mt
                cat: build
            win_md:
                desc: Set /MD or /MDd build
                aliases: md
                cat: build

            #

            toolset:
                type: String
                desc: Set VS generator toolset
                cat: build

            #

            force_server_query:
                option: s
                desc: Force server resolving
                aliases: server
            force_server_db_check:
                option: sd
                desc: Force server db check

            verbose:
                desc: Verbose output
                aliases: v
            trace:
                desc: Trace output
            build_jobs:
                option: j
                desc: Number of main build jobs
                type: int
                cat: build
            prepare_jobs:
                option: jp
                desc: Number of main build prepare jobs
                type: int
                cat: build
            global_jobs:
                option: jg
                desc: Global number of jobs
                type: int

            list_programs:
                desc: List available programs on the system
            list_predefined_targets:
                desc: List predefined targets

            self_upgrade:
                desc: Upgrade client
            self_upgrade_copy:
                type: path
                desc: "Upgrade client: copy file"
                option: internal-self-upgrade-copy
                really_hidden: true

            #static ::cl::list<String> cl_activate("activate", ::cl::desc("Activate specific packages"));

            #// TODO: https://github.com/tomtom-international/cpp-dependencies
            #static ::cl::list<bool> build_graph("g", ::cl::desc("Print .dot graph of build targets"), ::cl::sub(subcommand_build));

            internal_sign_file:
                type: path
                list: true
                value_desc: <file> <private.key>
                desc: Sign file with private key
                really_hidden: true
                multi_val: 2
            internal_verify_file:
                type: path
                list: true
                value_desc: <file> <sigfile> <public.key>
                desc: Verify signature with public key
                really_hidden: true
                multi_val: 3

            parse_configure_ac:
                type: path
                desc: Read checks from configure.ac. Add without space '=file' for custom files.
                value_optional: true
                hidden: true

            #//static ::cl::list<String> drivers("load-driver", ::cl::desc("Load more drivers"), ::cl::CommaSeparated);

            #//static ::cl::list<String> builtin_function(sw::builder::getInternalCallBuiltinFunctionName(), ::cl::desc("Call built-in function"), ::cl::Hidden);

            write_log_to_file:
                option: log-to-file

            input_settings_pairs:
                type: String
                list: true
                desc: Read settings from json string
                value_desc: <input settings>
                space_separated: true

    # abi
    subcommand:
        name: abi
        desc: List package ABI, check for ABI breakages.

        command_line:
            inputs:
                type: String
                list: true
                positional: true
                desc: inputs
                location: inputs

    # alias
    subcommand:
        name: alias
        desc: Create command aliases.

        command_line:
            name:
                positional: true
                required: true
                type: String
                desc: Alias name.
            arguments:
                type: String
                list: true
                consume_after: true
            delete_alias:
                aliases: d
                desc: Delete alias.
            print_alias:
                aliases: p
                desc: Print alias.

    # build
    subcommand:
        name: build
        desc: Build files, dirs or packages.

        command_line:
            build_inputs:
                type: String
                list: true
                positional: true
                desc: Files or directories to build (paths to config)
                location: inputs

            #static ::cl::opt<String> build_source_dir("S", ::cl::desc("Explicitly specify a source directory."), ::cl::sub(subcommand_build), ::cl::init("."));
            #static ::cl::opt<String> build_binary_dir("B", ::cl::desc("Explicitly specify a build directory."), ::cl::sub(subcommand_build), ::cl::init(SW_BINARY_DIR));

            build_fetch:
                option: fetch
                desc: Fetch sources, then build

            build_explan:
                option: ef
                type: path
                desc: Build execution plan from specified file

            build_default_explan:
                option: e
                desc: Build execution plan

            build_explan_last:
                option: el
                desc: Build execution plan from the last file

            file:
                type: path
                list: true
                desc: Build selected files

            isolated_build:
                option: isolated
                desc: Copy source files to isolated folders to check build like just after uploading

            ide_fast_path:
                type: path
                hidden: true
            ide_copy_to_dir:
                type: path
                hidden: true

            time_limit:
                type: String
            output_dir:
                type: path

    # configure
    subcommand:
        name: configure
        desc: Create build script.

        command_line:
            build_arg_configure:
                type: String
                positional: true
                desc: Configure
                default_value: |-
                    "."

    # create
    subcommand:
        name: create
        desc: Create different projects.

        command_line:
            create_type:
                type: String
                positional: true
                value_desc: <type>
                required: true
            create_proj_name:
                type: String
                positional: true
                value_desc: <project name>

            create_template:
                option: template
                type: String
                desc: Template project to create
                default_value: |-
                    "cpp.exe"
                aliases: t

            create_clear_dir:
                option: clear
                desc: Clear current directory
                aliases: c
            create_clear_dir_y:
                option: y
                desc: Answer yes
            create_build:
                option: b
                desc: Build instead of generate
            create_overwrite_files:
                option: overwrite
                desc: Clear current directory
                aliases: [o, ow]

            project_directory:
                type: path

            dependencies:
                list: true
                type: String

    # doc
    subcommand:
        name: doc
        desc: Open documentation.

    # fetch
    subcommand:
        name: fetch
        desc: Fetch sources.

        command_line:
            build_after_fetch:
                option: build
                desc: Build after fetch

    # generate
    subcommand:
        name: generate
        desc: Generate IDE projects.

        command_line:
            build_arg_generate:
                desc: File or directory to use to generate projects
                positional: true
                type: String
                list: true
                location: inputs
            generator:
                option: G
                type: String
                desc: Generator
                aliases: g
            print_dependencies:
                aliases: [ad,d,deps]
            print_overridden_dependencies:
                aliases: [od,o,odeps]
            output_no_config_subdir:
            check_stamp_list:
                type: path
                hidden: true
            local_targets_only:
                type: bool
            allow_empty_file_directive:
                type: bool
                default_value: true
            compdb_symlink:
                type: bool

    # get
    subcommand:
        name: get
        desc: Get different information. # add simple query lang?

        command_line:
            args:
                type: String
                list: true
                positional: true

    # install
    subcommand:
        name: install
        desc: Add package to lock.

        command_line:
            install_arg:
                positional: true
                type: String
            install_args:
                consume_after: true
                desc: Packages to add
                type: String
                list: true

    # integrate
    subcommand:
        name: integrate
        desc: Integrate sw into different tools.

        command_line:
            integrate_cmake_deps:
                option: cmake-deps
                type: path
            cmake_file_version:
                type: int
            integrate_waf_deps:
                option: waf-deps
                type: path

    # list
    subcommand:
        name: list
        desc: List packages in database.

        command_line:
            list_arg:
                positional: true
                type: String
                desc: Package regex to list
                default_value: |-
                    "."

            installed:
                desc: List installed packages
                aliases: i

    # mirror
    subcommand:
        name: mirror
        desc: Manage software mirrors.

    # open
    subcommand:
        name: open
        desc: Open package directory.

        command_line:
            open_arg:
                positional: true
                type: String
                desc: Packages to open
                list: true
                location: inputs

    # override
    subcommand:
        name: override
        desc: Override packages locally.

        command_line:
            prefix:
                positional: true
                type: String
                value_desc: prefix
            list_overridden_packages:
                option: l
                desc: List overridden packages
            delete_overridden_package:
                option: d
                desc: Delete overridden packages from index
            delete_overridden_package_dir:
                option: dd
                type: path
                desc: Delete overridden dir packages
                value_desc: sdir
            load_overridden_packages_from_file:
                option: load
                type: path
                desc: Load overridden packages desc from file and apply it.
                value_desc: fn
            save_overridden_packages_to_file:
                option: save
                type: path
                desc: Save overridden packages desc to file.
                value_desc: fn

    # pack
    subcommand:
        name: pack
        desc: Used to prepare package archives.

        command_line:
            build_arg_pack:
                positional: true
                desc: File or directory to use to pack projects
                type: String
                list: true
                location: inputs

            typei:
                type: int
                list: true
                desc: Types of archives (integers).
                comma_separated: true

            type:
                type: String
                list: true
                desc: Types of archives.
                comma_separated: true

    # path
    subcommand:
        name: path
        desc: Get different paths of packages.

        command_line:
            type:
                type: String
                desc: Path type
                default_value: |-
                    "sdir"

            path_arg:
                type: String
                positional: true
                required: true

    # remote
    subcommand:
        name: remote
        desc: Manage remotes.

        command_line:
            remote_subcommand:
                type: String
                positional: true
                desc: remote subcomand
                required: true
            remote_rest:
                type: String
                list: true
                desc: other remote args
                consume_after: true

    # remove
    subcommand:
        name: remove
        desc: Remove package.

        command_line:
            remove_arg:
                type: String
                list: true
                positional: true
                desc: Packages to remove

    # run
    subcommand:
        name: run
        desc: Run target (if applicable).

        command_line:
            run_app_in_container:
                option: in-container
                desc: Run app in secure container
            wdir:
                type: path
                desc: Working directory
            input:
                type: String
                desc: SW Input
            #//static ::cl::list<String> env("env", ::cl::desc("Env vars"), ::cl::sub(subcommand_run));
            target:
                type: String
                positional: true
                required: true
                value_desc: <Target to run>
            args:
                consume_after: true
                value_desc: <Command args>
                type: String
                list: true
            print_command:
                aliases: p
                desc: Prints command

    # server
    subcommand:
        name: server
        desc: Run different servers.

        command_line:
            distributed_builder:
                desc: Run distributed builder.

            endpoint:
                type: String
                desc: Server endpoint to listen on.
                default: |-
                    "0.0.0.0:12345"

    # setup
    subcommand:
        name: setup
        desc: Used to do some system setup which may require administrator access.

        command_line:
            uninstall:
                desc: Cleanup SW from the system. Removes storage and system integration settings.
            level:
                desc: |
                    Use the following values or write list separated by commas:
                    1   - Remove storage.
                    2   - Remove sw system integration settings.
                    4   - Remove sw settings.
                    8   - Remove sw executable (if possible).
                    16  - All of the above.
                type: int
                list: true

    # test
    subcommand:
        name: test
        desc: Run tests.

        command_line:
            build_arg_test:
                positional: true
                desc: File or directory to use to generate projects
                type: String
                list: true
                location: inputs

    # update
    subcommand:
        name: update
        desc: Update lock file.

        command_line:
            build_arg_update:
                positional: true
                list: true
                type: String
                desc: Update lock
            packages:
                desc: Packages to update
                list: true
                type: String

    # upload
    subcommand:
        name: upload
        desc: Upload packages.

        command_line:
            upload_remote:
                type: String
                positional: true
                desc: Remote name
            upload_dry:
                option: dry-run
                desc: Dry upload (without upload step)
            upload_prefix:
                positional: true
                desc: Prefix path
                required: true
                type: String

            source:
                type: String
                desc: Source type
            version:
                type: String

            git:
                type: String
                desc: Git url
            hg:
                type: String
                desc: Mercurial url
            bzr:
                type: String
                desc: Bazaar url
            fossil:
                type: String
                desc: Fossil url
            svn:
                type: String
                desc: Svn url
            cvs:
                type: String
                desc: Cvs url
            remote:
                type: String
                list: true
                desc: Remote url or urls

            branch:
                type: String
            commit:
                type: String
            tag:
                type: String
            revision:
                type: String
            # cvs
            module:
                type: String

    # verify
    subcommand:
        name: verify
        desc: Verify packages.

        command_line:
            verify_arg:
                type: String
                list: true
                positional: true
                required: true
                desc: Package name.

    # uri
    subcommand:
        name: uri
        desc: Used to invoke sw application from the website.

        command_line:
            uri_args:
                list: true
                type: String
                positional: true
                desc: sw uri arguments
